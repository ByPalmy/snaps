{"version":3,"sources":["../src/cli.ts"],"names":["initCommand"],"mappings":";;;;;;;;AAAA,OAAO,WAAW;AAClB,SAAS,eAAe;AAYxB,eAAsB,IACpB,MACAA,eAA2B,aACZ;AACf,QAAM,MAAM,QAAQ,IAAI,CAAC,EACtB,WAAW,aAAa,EACxB,MAAM,4BAA4B,EAElC;AAAA,IACC;AAAA,IACA;AAAA,EACF,EACC,QAAQA,YAAW,EAEnB,OAAO,iBAAiB,iBAAS,aAAa,EAE9C,OAAO,EACP,KAAK,EACL,MAAM,QAAQ,GAAG,EACjB,WAAW;AAChB","sourcesContent":["import yargs from 'yargs';\nimport { hideBin } from 'yargs/helpers';\n\nimport builders from './builders';\nimport { init } from './cmds';\n\n/**\n * The main CLI entry point function. This processes the command line args, and\n * runs the appropriate function.\n *\n * @param argv - The raw command line arguments, i.e., `process.argv`.\n * @param initCommand - Optional specification for init command.\n */\nexport async function cli(\n  argv: string[],\n  initCommand: typeof init = init,\n): Promise<void> {\n  await yargs(hideBin(argv))\n    .scriptName('create-snap')\n    .usage('Usage: $0 [directory-name]')\n\n    .example(\n      '$0 my-new-snap',\n      `\\tInitialize a snap project in the 'my-new-snap' directory`,\n    )\n    .command(initCommand)\n\n    .option('verboseErrors', builders.verboseErrors)\n\n    .strict()\n    .help()\n    .alias('help', 'h')\n    .parseAsync();\n}\n"]}