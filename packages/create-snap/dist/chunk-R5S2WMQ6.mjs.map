{"version":3,"sources":["../src/cmds/init/initHandler.ts"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport cliPackageJson from '@metamask/create-snap/package.json';\nimport type { NpmSnapPackageJson } from '@metamask/snaps-utils';\nimport {\n  NpmSnapFileNames,\n  readJsonFile,\n  createSnapManifest,\n  logInfo,\n} from '@metamask/snaps-utils/node';\nimport { promises as fs } from 'fs';\nimport pathUtils from 'path';\nimport type { SemVer } from 'semver';\nimport semver from 'semver';\n\nimport type { YargsArgs } from '../../types/yargs';\nimport {\n  buildSnap,\n  cloneTemplate,\n  gitInitWithCommit,\n  isGitInstalled,\n  isInGitRepository,\n  prepareWorkingDirectory,\n  SNAP_LOCATION,\n  yarnInstall,\n} from './initUtils';\n\n/**\n * Creates a new snap package, based on one of the provided templates. This\n * creates all the necessary files, like `package.json`, `snap.config.js`, etc.\n * to start developing a snap.\n *\n * @param argv - The Yargs arguments object.\n * @returns The Yargs arguments augmented with the new `dist`, `outfileName` and\n * `src` properties.\n * @throws If initialization of the snap package failed.\n */\nexport async function initHandler(argv: YargsArgs) {\n  const { directory } = argv;\n\n  const versionRange = cliPackageJson.engines.node;\n  const minimumVersion = (semver.minVersion(versionRange) as SemVer).format();\n\n  const isVersionSupported = semver.satisfies(process.version, versionRange);\n\n  if (!isVersionSupported) {\n    throw new Error(\n      `Init Error: You are using an outdated version of Node (${process.version}). Please update to Node ${minimumVersion} or later.`,\n    );\n  }\n\n  const gitExists = isGitInstalled();\n  if (!gitExists) {\n    throw new Error(\n      `Init Error: git is not installed. Please install git to continue.`,\n    );\n  }\n\n  const directoryToUse = directory\n    ? pathUtils.resolve(process.cwd(), directory)\n    : process.cwd();\n\n  logInfo(`Preparing ${directoryToUse}...`);\n\n  await prepareWorkingDirectory(directoryToUse);\n\n  try {\n    logInfo(`Cloning template...`);\n    cloneTemplate(directoryToUse);\n\n    await fs.rm(pathUtils.join(directoryToUse, '.git'), {\n      force: true,\n      recursive: true,\n    });\n  } catch (error) {\n    throw new Error('Init Error: Failed to create template.');\n  }\n\n  logInfo('Installing dependencies...');\n  yarnInstall(directoryToUse);\n\n  if (!isInGitRepository(directoryToUse)) {\n    logInfo('Initializing git repository...');\n    gitInitWithCommit(directoryToUse);\n  }\n\n  const snapLocation = pathUtils.join(directoryToUse, SNAP_LOCATION);\n\n  logInfo('Running initial build...');\n  buildSnap(snapLocation);\n\n  const manifest = (\n    await readJsonFile(pathUtils.join(snapLocation, NpmSnapFileNames.Manifest))\n  ).result;\n\n  const validatedManifest = createSnapManifest(manifest);\n\n  const packageJson = (\n    await readJsonFile(\n      pathUtils.join(snapLocation, NpmSnapFileNames.PackageJson),\n    )\n  ).result as NpmSnapPackageJson;\n\n  const distPath = validatedManifest.source.location.npm.filePath.split('/');\n\n  return {\n    ...argv,\n    dist: distPath[0],\n    outfileName: distPath[1],\n    src: packageJson.main || 'src/index.js',\n    snapLocation,\n  };\n}\n"],"mappings":";;;;;;;;;;;;AACA,OAAO,oBAAoB;AAE3B;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAS,YAAY,UAAU;AAC/B,OAAO,eAAe;AAEtB,OAAO,YAAY;AAwBnB,eAAsB,YAAY,MAAiB;AACjD,QAAM,EAAE,UAAU,IAAI;AAEtB,QAAM,eAAe,eAAe,QAAQ;AAC5C,QAAM,iBAAkB,OAAO,WAAW,YAAY,EAAa,OAAO;AAE1E,QAAM,qBAAqB,OAAO,UAAU,QAAQ,SAAS,YAAY;AAEzE,MAAI,CAAC,oBAAoB;AACvB,UAAM,IAAI;AAAA,MACR,0DAA0D,QAAQ,OAAO,4BAA4B,cAAc;AAAA,IACrH;AAAA,EACF;AAEA,QAAM,YAAY,eAAe;AACjC,MAAI,CAAC,WAAW;AACd,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAEA,QAAM,iBAAiB,YACnB,UAAU,QAAQ,QAAQ,IAAI,GAAG,SAAS,IAC1C,QAAQ,IAAI;AAEhB,UAAQ,aAAa,cAAc,KAAK;AAExC,QAAM,wBAAwB,cAAc;AAE5C,MAAI;AACF,YAAQ,qBAAqB;AAC7B,kBAAc,cAAc;AAE5B,UAAM,GAAG,GAAG,UAAU,KAAK,gBAAgB,MAAM,GAAG;AAAA,MAClD,OAAO;AAAA,MACP,WAAW;AAAA,IACb,CAAC;AAAA,EACH,SAAS,OAAO;AACd,UAAM,IAAI,MAAM,wCAAwC;AAAA,EAC1D;AAEA,UAAQ,4BAA4B;AACpC,cAAY,cAAc;AAE1B,MAAI,CAAC,kBAAkB,cAAc,GAAG;AACtC,YAAQ,gCAAgC;AACxC,sBAAkB,cAAc;AAAA,EAClC;AAEA,QAAM,eAAe,UAAU,KAAK,gBAAgB,aAAa;AAEjE,UAAQ,0BAA0B;AAClC,YAAU,YAAY;AAEtB,QAAM,YACJ,MAAM,aAAa,UAAU,KAAK,cAAc,iBAAiB,QAAQ,CAAC,GAC1E;AAEF,QAAM,oBAAoB,mBAAmB,QAAQ;AAErD,QAAM,eACJ,MAAM;AAAA,IACJ,UAAU,KAAK,cAAc,iBAAiB,WAAW;AAAA,EAC3D,GACA;AAEF,QAAM,WAAW,kBAAkB,OAAO,SAAS,IAAI,SAAS,MAAM,GAAG;AAEzE,SAAO;AAAA,IACL,GAAG;AAAA,IACH,MAAM,SAAS,CAAC;AAAA,IAChB,aAAa,SAAS,CAAC;AAAA,IACvB,KAAK,YAAY,QAAQ;AAAA,IACzB;AAAA,EACF;AACF;","names":[]}