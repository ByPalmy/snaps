{"version":3,"sources":["../src/cmds/init/index.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,eAAe;AAOjB,IAAM,cAAc;AAAA,EACzB,SAAS,CAAC,gBAAgB;AAAA,EAC1B,MAAM;AAAA,EACN,SAAS,CAAC,SAAqB;AAC7B,SAAK,WAAW,aAAa,iBAAS,SAAS;AAC/C,WAAO;AAAA,EACT;AAAA,EACA,SAAS;AACX;AASA,eAAe,KAAK,MAAgC;AAClD,QAAM,YAAY,IAAI;AACtB,UAAQ,wCAAwC;AAClD","sourcesContent":["import { logInfo } from '@metamask/snaps-utils';\nimport type yargs from 'yargs';\n\nimport builders from '../../builders';\nimport type { YargsArgs } from '../../types/yargs';\nimport { initHandler } from './initHandler';\n\nexport const initCommand = {\n  command: ['$0 [directory]'],\n  desc: 'Initialize MetaMask Snaps project',\n  builder: (yarg: yargs.Argv) => {\n    yarg.positional('directory', builders.directory);\n    return yarg;\n  },\n  handler: init,\n};\n\n/**\n * The main entrypoint for the init command. This calls the init handler to\n * initialize the snap package, builds the snap, and then updates the manifest\n * with the shasum of the built snap.\n *\n * @param argv - The Yargs arguments object.\n */\nasync function init(argv: YargsArgs): Promise<void> {\n  await initHandler(argv);\n  logInfo('\\nSnap project successfully initiated!');\n}\n"]}